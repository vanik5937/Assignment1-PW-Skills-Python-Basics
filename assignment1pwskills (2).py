# -*- coding: utf-8 -*-
"""Assignment1PWskills.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kZ4X_9Y6nuv0-Jeuy3-3vSZWMTw8UcH-

**1. Explain the key features of Python that makes it a popular choice for programming.**

Following are the key features of python that makes it a popular choice of programming -:

i. Ease of learning: Its syntax is clear and easy to read.It emphasizes readability and simplicity.
ii. Vast no. of libraries: Python has 13700 libraries which makes it easier to use and this reduces the need of writing the code from scratch.
iii. Widely used in the indusry
iv. Applications:
     i. Backend Pipeline
     ii. Frontend Pipeline
     iii. Automation
     iv. Database
     v. Image Processing
Pipeline is a steps of code, used to develop application.

**2. Describe the role of predefined keywords in Python and provide examples of how they are used in a program.**

Predefined keywords in python are reserved keywords that have special meaning and function. They are not used for naming a variable, functions.

Following are the examples of how they are used in prograam -:
i. if - elif - else keyword:
example: name = [Ajay, Bijay, sonu, monu]
 if Ajay not in name:
     print("Ajay is not present in the list")
 else:
     print("Present")

ii. def keyword: This keyword is used to define a function.
example:
def add(x,y):
    return x+y
add(20,10)

iii. for, while : It is used in the loop
eg. for i in range(0,10):
        print(i)
    x = 0
    while x < 10:
        print(x)
        x += 1
iv. Import is used to import a module
eg. import math as m
    print(m.sqrt(25))

**3. Compare and contrast mutable and immutable objects in Python with examples.**

 Mutable objects are those objects which can be changed after they are created whereas immutable objects are those objects which cannot be changed after they are created.
 Some mutable objects in python are List, Dictionaries, Sets
 Some immutable objects in python includes String, Tuples, etc

 eg. marks = [10,20,30,40]
     marks[0] = 39
     1st element of marks list is changed to 39. So list is a mutable objects.

     my_tuple = (1,2,3)
     new_tuple = my_tuple + (4,)
     Here original tuple is unchanged and new tuple is created

 Mutable objects can be more memory efficient than immutable objects

**4. Discuss the different types of operators in Python and provide examples of how they are used.**

Following are the operators used in python:

i. Arithmatic Operators: These operators are used to do mathematical operatins. Addition, Subtraction, Multiplication, Division , Modulus etc are performed by the arithmetic operators.
eg. sum = 5 + 2  # 7 will be stored in sum
    mul = 5 * 2  # 10 will be stored in mul
    sub = 5 - 2  # 3 will be stored in sub
    div = 5/2    # 2.5 will be stored in div

2. Comparison Operators: > , < , <= , >=, ==, != comes under comparison operator. They compare values.
eg. 3 > 5 // It will give False
    3 < 5 # True
    5>=5  # True
    6<= 5 # False
    9 == 9 # True
    9!= 9 # False

3. Logical Operator: These are used to combine conditional statement. "and" and "or" comes under logical operator.
eg. result = (5 > 3) and (2 < 4)  # result is True
    result = (5 > 3) or (2 > 4)  # True

4. Bitwise Operator: These perform bitwise and bitwise or, bitwise xor and bitwise not operations.
eg. result = 5 & 3  # result is 1 0101 & 0011 = 0001
    result = 5 | 3  # result is 7 etc

5. Assignment Operator: It assigns value to variables.
eg x = 5
   x *= 5
   x /= 5
   x += 5

6. Membership Operators: These operators are used to test if a sequence contains a value or not.
s = [1,2,3,4,5]
if 1 in s:     #True
    print("Present")

**5. Explain the concept of type casting in Python with examples.**

It is the process of conversion of one type of data to another type.
It is used in data manipulation, peforming arithmetic operations, etc.

Following are two types of typecasting:
 i. Explicit Typecasting: We have to convert one data type to another manually.
 eg. int() It converts value to integer
     float() converts a value to a float
     str() converts a value to a string
     list() converts a value to a list , etc
ii. Implicit Typecasting: It occurs automatically.
for eg, x = 5 #python automatically converts it into integer
        y= 3.5 # float
        x = input() # string
        s = "Ajay" # string

**6. How do conditional statements work in Python? Illustrate with examples.**

It is used to execute code based on the evaluation of one or more conditions.  if, elif, and else comes under conditional statements.

for eg.
 x = 5
 if x > 5:
     print("If staement runs")
 elif x == 0:
     print("elif statement runs")
 else:
     print("else statement runs")
 if 1st condition is true then if statment will execute otherwise it will proceed to elif statement and if elif condition is true it will run elif statement otherwise else statament will be executed.

**7. Describe the different types of loops in Python and their use cases with examples.**
Loops are used to perform the same operation multiple times until a specific condition is met. There are two types of loops in python:
i. for loop: It is used to iterate over a sequence or iterable objects. It is used to execute a code of block fixed no. of times.
eg. for i in range(0,5):
        print(i, end =" ")
    output
    1 2 3 4
ii. while loop: It is generally used when we dont know the no. of iterations to be performed. It is used to exuecute a code of block repeatedly as long as the condition is true.

x= 5
while(x>3):
    print(x, end=" ")
    x -= 1
output
5 4
"""